<Application x:Class="KingVoiceChanger.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KingVoiceChanger"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="DarkTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Base Styles -->
            <Style x:Key="HeaderLabelStyle" TargetType="Label">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style x:Key="ThemedComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="Padding" Value="8"/>
            </Style>

            <Style x:Key="ActionButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="15,10"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="8">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentHoverColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E81123"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ThemeToggleStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="15" Width="50" Height="25">
                                <Ellipse x:Name="dot" Fill="{DynamicResource AccentColor}" Height="15" Width="15" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="dot" Property="HorizontalAlignment" Value="Right"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
